[{"/home/rax/VSchool/Module 3/Assignments/dj-react/src/index.js":"1","/home/rax/VSchool/Module 3/Assignments/dj-react/src/App.js":"2","/home/rax/VSchool/Module 3/Assignments/dj-react/src/Squares.js":"3"},{"size":165,"mtime":1607042217340,"results":"4","hashOfConfig":"5"},{"size":3680,"mtime":1607059780450,"results":"6","hashOfConfig":"5"},{"size":261,"mtime":1607058765520,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"15lnao0",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rax/VSchool/Module 3/Assignments/dj-react/src/index.js",[],["16","17"],"/home/rax/VSchool/Module 3/Assignments/dj-react/src/App.js",["18"],"import React from \"react\"\n\nimport Squares from \"./Squares\"\n\nconst colorsArr = [\"white\", \"white\", \"white\", \"white\"]\n\nconst blackArr = [\"black\", \"black\", \"black\", \"black\"]\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            boxColors: colorsArr\n        }\n        this.blackWhiteChange = this.blackWhiteChange.bind(this)\n        this.purpleChange = this.purpleChange.bind(this)\n        this.leftBlueChange = this.leftBlueChange.bind(this)\n        this.rightBlueChange = this.rightBlueChange.bind(this)\n        this.limegreenChange = this.limegreenChange.bind(this)\n        this.yellowChange = this.yellowChange.bind(this)\n        this.orangeChange = this.orangeChange.bind(this)\n        this.randomColorChange = this.randomColorChange.bind(this)\n    }\n\n    blackWhiteChange() {\n        if (this.state.boxColors[0] === \"white\") {\n            this.setState({\n                boxColors: blackArr\n            })\n        } else if (this.state.boxColors[0] != \"white\") {\n            this.setState({\n                boxColors: colorsArr\n            })\n        }\n    }\n\n    purpleChange() {\n        this.setState(prevState => {\n            return{\n            boxColors: [\"purple\", \"purple\", prevState.boxColors[2], prevState.boxColors[3]]\n            }\n        })\n    }\n\n    leftBlueChange(){\n        this.setState(prevState => {\n            return{\n                boxColors: [prevState.boxColors[0], prevState.boxColors[1], \"blue\", prevState.boxColors[3]]\n            }\n        })\n    }\n\n    rightBlueChange(){\n        this.setState(prevState => {\n            return{\n                boxColors: [prevState.boxColors[0], prevState.boxColors[1], prevState.boxColors[2], \"blue\"]\n            }\n        })\n    }\n\n    limegreenChange(){\n        this.setState(prevState => {\n            return{\n                boxColors: [\"limegreen\", prevState.boxColors[1], prevState.boxColors[2], \"limegreen\"]\n            }\n        })\n    }\n\n    yellowChange(){\n        this.setState(prevState => {\n            return{\n                boxColors: [prevState.boxColors[0], prevState.boxColors[1], \"yellow\", \"yellow\"]\n            }\n        })\n    }\n\n    orangeChange(){\n        this.setState(prevState => {\n            return{\n                boxColors: [prevState.boxColors[0], \"orange\", prevState.boxColors[2], \"orange\"]\n            }\n        })\n    }\n\n    randomColorChange(){\n        this.setState(prevState => {\n            return{\n                boxColors: [\"aqua\", \"hotpink\", prevState.boxColors[2], \"magenta\"]\n            }\n        })\n    }\n\n    render() {\n        const colors = this.state.boxColors.map(function (color) {\n            return (\n                <Squares\n                    backgroundColor={color}\n                />\n            )\n        }\n        )\n        return (\n            <div>\n                <div class=\"boxContainer\">\n                    {colors}\n                </div>\n                <div class=\"buttonsContainer\">\n                    <button onClick={this.blackWhiteChange}>DJ Small</button>\n                    <button onClick={this.purpleChange}>Party DJ</button>\n                    <button onClick={this.leftBlueChange}>Left Blue</button>\n                    <button onClick={this.rightBlueChange}>Right Blue</button>\n                    <button onClick={this.limegreenChange}>Big DJ One</button>\n                    <button onClick={this.yellowChange}>Big DJ Two</button>\n                    <button onClick={this.orangeChange}>Big DJ Three</button>\n                    <button onClick={this.randomColorChange}>Big DJ Four</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App","/home/rax/VSchool/Module 3/Assignments/dj-react/src/Squares.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":30,"column":44,"nodeType":"25","messageId":"26","endLine":30,"endColumn":46},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]